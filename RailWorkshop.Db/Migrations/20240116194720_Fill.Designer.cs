// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RailWorkshop.Db;

#nullable disable

namespace RailWorkshop.Db.Migrations
{
    [DbContext(typeof(PostgresContext))]
    [Migration("20240116194720_Fill")]
    partial class Fill
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RailWorkshop.Services.Entity.Consignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<string>("Stamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("StatementId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("StatementId", "ProductId")
                        .IsUnique();

                    b.ToTable("Consignments");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.ConsignmentDefect", b =>
                {
                    b.Property<Guid>("ConsignmentId")
                        .HasColumnType("uuid");

                    b.Property<int>("DefectId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Size")
                        .HasColumnType("numeric");

                    b.HasKey("ConsignmentId", "DefectId");

                    b.HasIndex("DefectId");

                    b.ToTable("ConsignmentDefects");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.Defect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Defects");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SegmentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SegmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProfileId")
                        .HasColumnType("integer");

                    b.Property<Dictionary<string, string>>("Properties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("SteelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("SteelId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.RailProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RailProfiles");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.Statement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ResponsibleId")
                        .HasColumnType("uuid");

                    b.Property<int>("SegmentId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ResponsibleId");

                    b.HasIndex("SegmentId");

                    b.ToTable("Statements");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.SteelGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SteelGrades");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.WorkshopSegment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("WorkshopSegments");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.Consignment", b =>
                {
                    b.HasOne("RailWorkshop.Services.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RailWorkshop.Services.Entity.Statement", null)
                        .WithMany("Products")
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.ConsignmentDefect", b =>
                {
                    b.HasOne("RailWorkshop.Services.Entity.Consignment", null)
                        .WithMany("Defects")
                        .HasForeignKey("ConsignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RailWorkshop.Services.Entity.Defect", "Defect")
                        .WithMany()
                        .HasForeignKey("DefectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defect");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.Employee", b =>
                {
                    b.HasOne("RailWorkshop.Services.Entity.WorkshopSegment", "Segment")
                        .WithMany()
                        .HasForeignKey("SegmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Segment");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.Product", b =>
                {
                    b.HasOne("RailWorkshop.Services.Entity.RailProfile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RailWorkshop.Services.Entity.SteelGrade", "Steel")
                        .WithMany()
                        .HasForeignKey("SteelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("Steel");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.Statement", b =>
                {
                    b.HasOne("RailWorkshop.Services.Entity.Employee", "Responsible")
                        .WithMany()
                        .HasForeignKey("ResponsibleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RailWorkshop.Services.Entity.WorkshopSegment", "Segment")
                        .WithMany()
                        .HasForeignKey("SegmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Responsible");

                    b.Navigation("Segment");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.Consignment", b =>
                {
                    b.Navigation("Defects");
                });

            modelBuilder.Entity("RailWorkshop.Services.Entity.Statement", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
